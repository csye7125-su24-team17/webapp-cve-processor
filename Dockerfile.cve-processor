# Stage 1: Build the Go application
FROM golang:1.18-alpine AS builder

# Set the working directory inside the container
WORKDIR /app

# Copy the go.mod and go.sum files first to utilize Docker cache efficiently
COPY go.mod go.sum ./

# Download dependencies
RUN go mod tidy

# Copy the rest of the application source code
COPY cmd/ ./cmd/
COPY pkg/ ./pkg/

# Build the Go application binary
RUN go build -o main ./cmd/main.go

# Stage 2: Create a small image with the compiled binary
FROM alpine:latest

# Set the working directory inside the container
WORKDIR /app

# Copy the binary from the builder stage
COPY --from=builder /app/main .

# Expose the application port (adjust if your app uses a different port)
EXPOSE 8080

# Command to run the Go application
CMD ["./main"]
